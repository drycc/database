imageOrg: "drycc"
imagePullPolicy: "Always"
imageTag: "canary"
imageRegistry: "registry.drycc.cc"

replicas: 3

## Enable diagnostic mode
##
diagnosticMode:
  ## @param diagnosticMode.enabled Enable diagnostic mode (all probes will be disabled and the command will be overridden)
  ##
  enabled: false
  ## @param diagnosticMode.command Command to override all containers
  ##
  command:
    - sleep
  ## @param diagnosticMode.args Args to override all containers
  ##
  args:
    - infinity

resources: {}
  # limits:
  #   cpu: 200m
  #   memory: 50Mi
  # requests:
  #   cpu: 100m
  #   memory: 30Mi

nodeAffinityPreset:
  key: "drycc.cc/node"
  type: "soft"
  values:
  - "true"

podAffinityPreset:
  type: ""
  extraMatchLabels:
    security: "drycc-security"

podAntiAffinityPreset:
  type: "soft"
  extraMatchLabels:
    app: "drycc-database"

debug: "false"
timeout: "1200"
# Service
service:
  # Provide any additional service annotations
  annotations: {}
# GCP PDs and EBS volumes are supported only
persistence:
  enabled: false # Set to true to enable persistence
  size: 5Gi # PVC size
  ## database data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  ## Storage class of PV to bind. By default it looks for standard storage class.
  ## If the PV uses a different storage class, specify that here.
  storageClass: ""
# The username and password to be used by the on-cluster database.
# If left empty they will be generated
# The user name should be set to lowercase letters 
superuser: "postgres"
superuserPassword: ""
replicator: "standby"
replicatorPassword: ""
user: ""
password: ""
initDatabases: "controller,passport,grafana"
databaseExtensions: ""
